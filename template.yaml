AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Photo_app-usres-api-cognito

  Sample SAM Template for Photo_app-usres-api-cognito

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Runtime: java17
    Architectures:
      - x86_64
    MemorySize: 512
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:
        MY_COGNITO_POOL_APP_CLIENT_ID: AQICAHiS6uiKNzpAgbpo09FQghHql8gIeIquGmqGUqk/L37ygQHvx+9pIaSWwj3M1qdvnkzsAAAAeDB2BgkqhkiG9w0BBwagaTBnAgEAMGIGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM4sJKPtGdeTYRDOg6AgEQgDUS5TFoMviaqcIpCShTXGA60XJ5IsJVD4nangxx9vpRjMfcKnDUKjwzH6tqtSrxHCgEPOcRpw==
        MY_COGNITO_POOL_APP_CLIENT_SECRET: AQICAHiS6uiKNzpAgbpo09FQghHql8gIeIquGmqGUqk/L37ygQGu7qsFzPpELQ1Fk9pswFfdAAAAlTCBkgYJKoZIhvcNAQcGoIGEMIGBAgEAMHwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM7ITkK1FtVQ1IUnOmAgEQgE9VO4yL9yZR97C9EZ/s9R/odarIAKREH0/lgl1uYnd1Nu2nvbzD34u227tRtPGVu2UiteA1mrjuR5ZDk+wR7oObvqWH2hoCPfLaQfvuCsUy
        MY_COGNITO_POOL_ID: AQICAHiS6uiKNzpAgbpo09FQghHql8gIeIquGmqGUqk/L37ygQEG93sb7Oif86+aKWjCR4mOAAAAcTBvBgkqhkiG9w0BBwagYjBgAgEAMFsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMoYwKxd9eneXgQE3+AgEQgC5KbIBsAQ6oWTjgOHtwfhvgNeByiowfYSU2SwdT/0oo/8v+0NxNhnoag49u7xua
    

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: open-api.yaml

  CreateUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApiCognito
      Handler: com.learnaws.lambda.CreateUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users
            Method: post
            RestApiId:
              Ref: MyApi

  ConfirmUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApiCognito
      Handler: com.learnaws.lambda.ConfirmUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /confirm
            Method: post
            RestApiId:
              Ref: MyApi

  LoginUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApiCognito
      Handler: com.learnaws.lambda.LoginUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /login
            Method: post
            RestApiId:
              Ref: MyApi

  AddUserToGroupHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApiCognito
      Handler: com.learnaws.lambda.AddUserToGroupHandler::handleRequest
      Policies:
        - Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: 
              - 'cognito-idp:AdminAddUserToGroup'
            Resource: "arn:aws:cognito-idp:us-east-1:339713074675:userpool/us-east-1_MPBwjerxA"
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/{userName}/add-to-group
            Method: post
            RestApiId:
              Ref: MyApi

  GetUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApiCognito
      Handler: com.learnaws.lambda.GetUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/me
            Method: get
            RestApiId:
              Ref: MyApi

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateUserApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  CreateUserHandlerFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt CreateUserHandlerFunction.Arn
  CreateUserHandlerFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt CreateUserHandlerFunctionRole.Arn
